# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
set $super Mod4
set $alt   Mod1


font pango:Open Sans 10
font FontAwesome5Free:style=Solid:pixelsize=18:antialias=false;3
font FontAwesome5Brands:style=Solid:pixelsize=18:antialias=false;3
# font pango:Open Sans,file-icons 10
# font pango:FontAwesome 9
# font pango:file-icons 9
# font pango:DejaVu Sans Mono 9
# font pango: FontAwesome
# font pango:github\-octicons 10
# font pango: octicons  10
# font pango: Material\ Icons  10
# font pango: Icons Regular 10


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super


focus_follows_mouse yes

# kill focused window
bindsym $super+Shift+A kill

set $menu Menu: (k) kill; each command exit mode
# bindsym $super+$alt+x mode "$menu"
# mode "$menu" {
#         # These bindings trigger as soon as you enter the app mode
#         bindsym k exec kill

#         bindsym Return mode "default"
#         bindsym Escape mode "default"
#         bindsym $super+x mode "default"
# }

# change focus
bindsym $super+o focus next

bindsym $super+j focus left
bindsym $super+k focus down
bindsym $super+l focus up
bindsym $super+m focus right

# move focused window
bindsym $super+Shift+j move left
bindsym $super+Shift+k move down
bindsym $super+Shift+l move up
bindsym $super+Shift+M move right

# split in horizontal orientation
bindsym $super+h split h

# split in vertical orientation
bindsym $super+v split v

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $super+s layout stacking => I never use that anyway
bindsym $super+t layout tabbed
bindsym $super+s layout toggle split

# toggle tiling / floating
bindsym $super+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $super+space focus mode_toggle

# focus the parent container
bindsym $super+q focus parent

# focus the child container
#bindsym $super+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

set $ws1 ""
set $ws2 ""
set $ws3 "²"
set $ws4 ""
set $ws5 ""
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# two screen output
# workspace $ws1 output HDMI-2
# workspace $ws2 output eDP-1
# workspace $ws3 output HDMI-2
# workspace $ws4 output eDP-1
# workspace $ws5 output eDP-1

# switch to workspace
bindsym $super+ampersand workspace $ws1
bindsym $super+eacute workspace $ws2
bindsym $super+quotedbl workspace $ws3
bindsym $super+apostrophe workspace $ws4
bindsym $super+parenleft workspace $ws5
bindsym $super+minus workspace $ws6
bindsym $super+egrave workspace $ws7
bindsym $super+underscore workspace $ws8
bindsym $super+ccedilla workspace $ws9
bindsym $super+agrave workspace $ws10

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace $ws1
bindsym $super+Shift+2 move container to workspace $ws2
bindsym $super+Shift+3 move container to workspace $ws3
bindsym $super+Shift+4 move container to workspace $ws4
bindsym $super+Shift+5 move container to workspace $ws5
bindsym $super+Shift+6 move container to workspace $ws6
bindsym $super+Shift+7 move container to workspace $ws7
bindsym $super+Shift+8 move container to workspace $ws8
bindsym $super+Shift+9 move container to workspace $ws9
bindsym $super+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $super+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $super+Shift+e exec "i3-nagbar -t warning -f pango:OpenSans:20 -m 'Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
set $resize Resize: (j) left, (k)down, (l)up, (m)right
bindsym $super+r mode "$resize"
mode "$resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 6 px or 6 ppt
        bindsym k resize grow height 6 px or 6 ppt
        bindsym l resize shrink height 6 px or 6 ppt
        bindsym m resize grow width 6 px or 6 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 6 px or 6 ppt
        bindsym Down resize grow height 6 px or 6 ppt
        bindsym Up resize shrink height 6 px or 6 ppt
        bindsym Right resize grow width 6 px or 6 ppt

        # back to normal: Enter or Escape or $super+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+g mode "default"
}

# Theme colors

# Colors set from ~/.Xresources
set_from_resource	$background	background
set_from_resource	$foreground	foreground
set_from_resource	$color0		color0
set_from_resource 	$color1 	color1
set_from_resource 	$color2 	color2
set_from_resource 	$color3 	color3
set_from_resource 	$color4 	color4
set_from_resource 	$color5 	color5
set_from_resource 	$color6		color6
set_from_resource	$color7		color7
set_from_resource	$color8		color8
set_from_resource	$color9		color9
set_from_resource	$color10	color10
set_from_resource	$color11	color11
set_from_resource	$color12	color12
set_from_resource	$color13	color13
set_from_resource	$color14	color14
set_from_resource	$color15	color15


# class                   border  backgr. text    indic.
# child_border
#                       BORDER      BACKGROUND  TEXT        INDICATOR   CHILD_BORDER

client.background       $background


client.focused         	$foreground $background $color6     $foreground $color6
client.unfocused       	$background $background	$color8     $background	$background
client.focused_inactive	$color8     $background	$color8     $background	$background
client.urgent		$foreground $color1	$foreground $background	$background
client.placeholder	$foreground $background	$foreground $background	$background

#polybar
exec_always --no-startup-id $HOME/bin/startsimplebar

# volume controls
bindsym XF86AudioLowerVolume exec amixer -D default sset Master 5%-
bindsym XF86AudioRaiseVolume exec amixer -D default sset Master 5%+

bindsym XF86AudioMute        exec amixer -D default sset Master toggle
bindsym XF86AudioMicMute     exec amixer set Capture toggle

# media controls
bindsym XF86AudioPlay exec "mpc toggle"
bindsym XF86AudioStop exec "mpc stop"
bindsym XF86AudioNext exec "mpc next"
bindsym XF86AudioPrev exec "mpc prev"
# backlight
bindsym XF86MonBrightnessUp   exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Lock screen
bindsym $super+twosuperior exec --no-startup-id "i3lock-fancy-rapid 5 10 -u -p default"

# between
# bindsym $super+Menu exec --no-startup-id bepo_switch

assign [class="^qutebrowser"] → $ws4
assign [class="^firefox"]     → $ws4
assign [class="^Wire"]        → $ws5
assign [class="^Telegram"]    → $ws5
assign [class="^zoom"]        → $ws5
assign [class="^Slack"]       → $ws5
assign [class="^Riot"]        → $ws5
assign [class="^Signal"]      → $ws5
assign [class="^teamspeak3"]  → $ws5

# gaps between windows

for_window [class=".*"] border pixel 4

set $default_gaps_inner 4
set $default_gaps_outer 8
gaps inner $default_gaps_inner
gaps outer $default_gaps_inner
# gaps top    all set $default_gaps_outer
# gaps bottom all set $default_gaps_outer
smart_gaps on
smart_borders on


# cloud
exec --no-startup-id nextcloud &

# touchscreen
## keyboard
exec --no-startup-id onboard -l fr -a &
## gesture
exec --no-startup-id touchegg &

# Screen
## check if multiscreen setup and resize touchscreen part
exec_always --no-startup-id $HOME/bin/xrandr-changed &
## screen detection
exec_always --no-startup-id autorandr --change &
## auto rotate screen when pc is turned
exec --no-startup-id systemctl --user start 2in1screen.service &

# start a terminal
bindsym $super+Return exec urxvt

# start an emacs client
bindsym $super+e exec emacsclient -c

# start rofi (program launcher)
bindsym $super+x exec --no-startup-id rofi -show combi

# start gopass (password manager with rofi interface)
bindsym $super+p exec --no-startup-id  $HOME/bin/rofi-gopass

#start udiskie and bind manager with rofi interface
exec udiskie
bindsym $super+d exec --no-startup-id $HOME/bin/rofi-udiskie

set $app App: (q) qutebrowser, (r) riot, (w) wire-desktop, (s) slack
bindsym $super+c mode "$app"
mode "$app" {
        # These bindings trigger as soon as you enter the app mode
	bindsym r exec riot-desktop
	bindsym q exec qutebrowser
        bindsym w exec wire-desktop
	bindsym s exec slack

        # back to normal: Enter or Escape or $super+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+g mode "default"
}
